/*
 * Kill Bill
 *
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.10
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RolledUpUsage {
    #[serde(rename = "subscriptionId", skip_serializing_if = "Option::is_none")]
    pub subscription_id: Option<uuid::Uuid>,
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
    #[serde(rename = "rolledUpUnits", skip_serializing_if = "Option::is_none")]
    pub rolled_up_units: Option<Vec<models::RolledUpUnit>>,
}

impl RolledUpUsage {
    pub fn new() -> RolledUpUsage {
        RolledUpUsage {
            subscription_id: None,
            start_date: None,
            end_date: None,
            rolled_up_units: None,
        }
    }
}

