/*
 * Kill Bill
 *
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.10
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Tenant {
    #[serde(rename = "tenantId", skip_serializing_if = "Option::is_none")]
    pub tenant_id: Option<uuid::Uuid>,
    #[serde(rename = "externalKey", skip_serializing_if = "Option::is_none")]
    pub external_key: Option<String>,
    #[serde(rename = "apiKey")]
    pub api_key: String,
    #[serde(rename = "apiSecret")]
    pub api_secret: String,
    #[serde(rename = "auditLogs", skip_serializing_if = "Option::is_none")]
    pub audit_logs: Option<Vec<models::AuditLog>>,
}

impl Tenant {
    pub fn new(api_key: String, api_secret: String) -> Tenant {
        Tenant {
            tenant_id: None,
            external_key: None,
            api_key,
            api_secret,
            audit_logs: None,
        }
    }
}

