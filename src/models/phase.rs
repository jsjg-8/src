/*
 * Kill Bill
 *
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.10
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Phase {
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "prices", skip_serializing_if = "Option::is_none")]
    pub prices: Option<Vec<models::Price>>,
    #[serde(rename = "fixedPrices", skip_serializing_if = "Option::is_none")]
    pub fixed_prices: Option<Vec<models::Price>>,
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<Box<models::Duration>>,
    #[serde(rename = "usages", skip_serializing_if = "Option::is_none")]
    pub usages: Option<Vec<models::Usage>>,
}

impl Phase {
    pub fn new() -> Phase {
        Phase {
            r#type: None,
            prices: None,
            fixed_prices: None,
            duration: None,
            usages: None,
        }
    }
}

