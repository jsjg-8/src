/*
 * Kill Bill
 *
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.10
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NodeInfo {
    #[serde(rename = "nodeName", skip_serializing_if = "Option::is_none")]
    pub node_name: Option<String>,
    #[serde(rename = "bootTime", skip_serializing_if = "Option::is_none")]
    pub boot_time: Option<String>,
    #[serde(rename = "lastUpdatedDate", skip_serializing_if = "Option::is_none")]
    pub last_updated_date: Option<String>,
    #[serde(rename = "kbVersion", skip_serializing_if = "Option::is_none")]
    pub kb_version: Option<String>,
    #[serde(rename = "apiVersion", skip_serializing_if = "Option::is_none")]
    pub api_version: Option<String>,
    #[serde(rename = "pluginApiVersion", skip_serializing_if = "Option::is_none")]
    pub plugin_api_version: Option<String>,
    #[serde(rename = "commonVersion", skip_serializing_if = "Option::is_none")]
    pub common_version: Option<String>,
    #[serde(rename = "platformVersion", skip_serializing_if = "Option::is_none")]
    pub platform_version: Option<String>,
    #[serde(rename = "pluginsInfo", skip_serializing_if = "Option::is_none")]
    pub plugins_info: Option<Vec<models::PluginInfo>>,
}

impl NodeInfo {
    pub fn new() -> NodeInfo {
        NodeInfo {
            node_name: None,
            boot_time: None,
            last_updated_date: None,
            kb_version: None,
            api_version: None,
            plugin_api_version: None,
            common_version: None,
            platform_version: None,
            plugins_info: None,
        }
    }
}

