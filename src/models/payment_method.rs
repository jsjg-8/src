/*
 * Kill Bill
 *
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.10
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PaymentMethod {
    #[serde(rename = "paymentMethodId", skip_serializing_if = "Option::is_none")]
    pub payment_method_id: Option<uuid::Uuid>,
    #[serde(rename = "externalKey", skip_serializing_if = "Option::is_none")]
    pub external_key: Option<String>,
    #[serde(rename = "accountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<uuid::Uuid>,
    #[serde(rename = "isDefault", skip_serializing_if = "Option::is_none")]
    pub is_default: Option<bool>,
    #[serde(rename = "pluginName", skip_serializing_if = "Option::is_none")]
    pub plugin_name: Option<String>,
    #[serde(rename = "pluginInfo", skip_serializing_if = "Option::is_none")]
    pub plugin_info: Option<Box<models::PaymentMethodPluginDetail>>,
    #[serde(rename = "auditLogs", skip_serializing_if = "Option::is_none")]
    pub audit_logs: Option<Vec<models::AuditLog>>,
}

impl PaymentMethod {
    pub fn new() -> PaymentMethod {
        PaymentMethod {
            payment_method_id: None,
            external_key: None,
            account_id: None,
            is_default: None,
            plugin_name: None,
            plugin_info: None,
            audit_logs: None,
        }
    }
}

