/*
 * Kill Bill
 *
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.10
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OverdueStateConfig {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "isClearState", skip_serializing_if = "Option::is_none")]
    pub is_clear_state: Option<bool>,
    #[serde(rename = "condition", skip_serializing_if = "Option::is_none")]
    pub condition: Option<Box<models::OverdueCondition>>,
    #[serde(rename = "externalMessage", skip_serializing_if = "Option::is_none")]
    pub external_message: Option<String>,
    #[serde(rename = "isBlockChanges", skip_serializing_if = "Option::is_none")]
    pub is_block_changes: Option<bool>,
    #[serde(rename = "isDisableEntitlement", skip_serializing_if = "Option::is_none")]
    pub is_disable_entitlement: Option<bool>,
    #[serde(rename = "subscriptionCancellationPolicy", skip_serializing_if = "Option::is_none")]
    pub subscription_cancellation_policy: Option<SubscriptionCancellationPolicy>,
    #[serde(rename = "autoReevaluationIntervalDays", skip_serializing_if = "Option::is_none")]
    pub auto_reevaluation_interval_days: Option<i32>,
}

impl OverdueStateConfig {
    pub fn new() -> OverdueStateConfig {
        OverdueStateConfig {
            name: None,
            is_clear_state: None,
            condition: None,
            external_message: None,
            is_block_changes: None,
            is_disable_entitlement: None,
            subscription_cancellation_policy: None,
            auto_reevaluation_interval_days: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubscriptionCancellationPolicy {
    #[serde(rename = "END_OF_TERM")]
    EndOfTerm,
    #[serde(rename = "IMMEDIATE")]
    Immediate,
    #[serde(rename = "NONE")]
    None,
}

impl Default for SubscriptionCancellationPolicy {
    fn default() -> SubscriptionCancellationPolicy {
        Self::EndOfTerm
    }
}

