/*
 * Kill Bill
 *
 * Kill Bill is an open-source billing and payments platform
 *
 * The version of the OpenAPI document: 0.24.10
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PlanDetail {
    #[serde(rename = "product", skip_serializing_if = "Option::is_none")]
    pub product: Option<String>,
    #[serde(rename = "plan", skip_serializing_if = "Option::is_none")]
    pub plan: Option<String>,
    #[serde(rename = "priceList", skip_serializing_if = "Option::is_none")]
    pub price_list: Option<String>,
    #[serde(rename = "finalPhaseBillingPeriod", skip_serializing_if = "Option::is_none")]
    pub final_phase_billing_period: Option<FinalPhaseBillingPeriod>,
    #[serde(rename = "finalPhaseRecurringPrice", skip_serializing_if = "Option::is_none")]
    pub final_phase_recurring_price: Option<Vec<models::Price>>,
}

impl PlanDetail {
    pub fn new() -> PlanDetail {
        PlanDetail {
            product: None,
            plan: None,
            price_list: None,
            final_phase_billing_period: None,
            final_phase_recurring_price: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FinalPhaseBillingPeriod {
    #[serde(rename = "DAILY")]
    Daily,
    #[serde(rename = "WEEKLY")]
    Weekly,
    #[serde(rename = "BIWEEKLY")]
    Biweekly,
    #[serde(rename = "THIRTY_DAYS")]
    ThirtyDays,
    #[serde(rename = "THIRTY_ONE_DAYS")]
    ThirtyOneDays,
    #[serde(rename = "SIXTY_DAYS")]
    SixtyDays,
    #[serde(rename = "NINETY_DAYS")]
    NinetyDays,
    #[serde(rename = "MONTHLY")]
    Monthly,
    #[serde(rename = "BIMESTRIAL")]
    Bimestrial,
    #[serde(rename = "QUARTERLY")]
    Quarterly,
    #[serde(rename = "TRIANNUAL")]
    Triannual,
    #[serde(rename = "BIANNUAL")]
    Biannual,
    #[serde(rename = "ANNUAL")]
    Annual,
    #[serde(rename = "SESQUIENNIAL")]
    Sesquiennial,
    #[serde(rename = "BIENNIAL")]
    Biennial,
    #[serde(rename = "TRIENNIAL")]
    Triennial,
    #[serde(rename = "NO_BILLING_PERIOD")]
    NoBillingPeriod,
}

impl Default for FinalPhaseBillingPeriod {
    fn default() -> FinalPhaseBillingPeriod {
        Self::Daily
    }
}

